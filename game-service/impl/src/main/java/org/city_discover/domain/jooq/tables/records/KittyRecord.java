/*
 * This file is generated by jOOQ.
 */
package org.city_discover.domain.jooq.tables.records;


import java.util.UUID;

import org.city_discover.domain.jooq.tables.Kitty;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Kitties
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KittyRecord extends UpdatableRecordImpl<KittyRecord> implements Record5<UUID, String, Double, Double, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.kitty.id</code>. Kitty ID
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.kitty.id</code>. Kitty ID
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.kitty.name</code>. Kitty name
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.kitty.name</code>. Kitty name
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.kitty.latitude</code>. Kitty place latitude
     */
    public void setLatitude(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.kitty.latitude</code>. Kitty place latitude
     */
    public Double getLatitude() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.kitty.longitude</code>. Kitty place longitude
     */
    public void setLongitude(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.kitty.longitude</code>. Kitty place longitude
     */
    public Double getLongitude() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.kitty.photo_id</code>. Kitty photo id
     */
    public void setPhotoId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.kitty.photo_id</code>. Kitty photo id
     */
    public UUID getPhotoId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, String, Double, Double, UUID> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, String, Double, Double, UUID> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Kitty.KITTY.ID;
    }

    @Override
    public Field<String> field2() {
        return Kitty.KITTY.NAME;
    }

    @Override
    public Field<Double> field3() {
        return Kitty.KITTY.LATITUDE;
    }

    @Override
    public Field<Double> field4() {
        return Kitty.KITTY.LONGITUDE;
    }

    @Override
    public Field<UUID> field5() {
        return Kitty.KITTY.PHOTO_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Double component3() {
        return getLatitude();
    }

    @Override
    public Double component4() {
        return getLongitude();
    }

    @Override
    public UUID component5() {
        return getPhotoId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Double value3() {
        return getLatitude();
    }

    @Override
    public Double value4() {
        return getLongitude();
    }

    @Override
    public UUID value5() {
        return getPhotoId();
    }

    @Override
    public KittyRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public KittyRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public KittyRecord value3(Double value) {
        setLatitude(value);
        return this;
    }

    @Override
    public KittyRecord value4(Double value) {
        setLongitude(value);
        return this;
    }

    @Override
    public KittyRecord value5(UUID value) {
        setPhotoId(value);
        return this;
    }

    @Override
    public KittyRecord values(UUID value1, String value2, Double value3, Double value4, UUID value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KittyRecord
     */
    public KittyRecord() {
        super(Kitty.KITTY);
    }

    /**
     * Create a detached, initialised KittyRecord
     */
    public KittyRecord(UUID id, String name, Double latitude, Double longitude, UUID photoId) {
        super(Kitty.KITTY);

        setId(id);
        setName(name);
        setLatitude(latitude);
        setLongitude(longitude);
        setPhotoId(photoId);
        resetChangedOnNotNull();
    }
}
