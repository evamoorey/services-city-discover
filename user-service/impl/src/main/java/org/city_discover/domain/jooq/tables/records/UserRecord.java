/*
 * This file is generated by jOOQ.
 */
package org.city_discover.domain.jooq.tables.records;


import java.time.Instant;
import java.util.UUID;

import org.city_discover.domain.jooq.tables.User;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * User's info
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<UUID, String, String, Instant, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user.id</code>. User id
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user.id</code>. User id
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.user.email</code>. User email
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user.email</code>. User email
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user.username</code>. Username
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user.username</code>. Username
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.user.creation_date</code>. Code creation time
     */
    public void setCreationDate(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.user.creation_date</code>. Code creation time
     */
    public Instant getCreationDate() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>public.user.gender</code>. User gender
     */
    public void setGender(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.user.gender</code>. User gender
     */
    public String getGender() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.user.age</code>. User age
     */
    public void setAge(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.user.age</code>. User age
     */
    public Integer getAge() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.user.preferences</code>. User preferences
     */
    public void setPreferences(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.user.preferences</code>. User preferences
     */
    public String getPreferences() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, Instant, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, Instant, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return User.USER.USERNAME;
    }

    @Override
    public Field<Instant> field4() {
        return User.USER.CREATION_DATE;
    }

    @Override
    public Field<String> field5() {
        return User.USER.GENDER;
    }

    @Override
    public Field<Integer> field6() {
        return User.USER.AGE;
    }

    @Override
    public Field<String> field7() {
        return User.USER.PREFERENCES;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public Instant component4() {
        return getCreationDate();
    }

    @Override
    public String component5() {
        return getGender();
    }

    @Override
    public Integer component6() {
        return getAge();
    }

    @Override
    public String component7() {
        return getPreferences();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public Instant value4() {
        return getCreationDate();
    }

    @Override
    public String value5() {
        return getGender();
    }

    @Override
    public Integer value6() {
        return getAge();
    }

    @Override
    public String value7() {
        return getPreferences();
    }

    @Override
    public UserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord value4(Instant value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setGender(value);
        return this;
    }

    @Override
    public UserRecord value6(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setPreferences(value);
        return this;
    }

    @Override
    public UserRecord values(UUID value1, String value2, String value3, Instant value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UUID id, String email, String username, Instant creationDate, String gender, Integer age, String preferences) {
        super(User.USER);

        setId(id);
        setEmail(email);
        setUsername(username);
        setCreationDate(creationDate);
        setGender(gender);
        setAge(age);
        setPreferences(preferences);
        resetChangedOnNotNull();
    }
}
